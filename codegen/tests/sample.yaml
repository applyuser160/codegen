openapi: 3.0.3
info:
  title: User API
  version: 1.0.0
paths:
  /users:
    get:
      summary: Get list of users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{userId}:
    get:
      summary: Get a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      summary: Update a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    delete:
      summary: Delete a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: johndoe
        email:
          type: string
          format: email
          example: johndoe@example.com
        is_active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: '2024-01-01T12:00:00Z'
        updated_at:
          type: string
          format: date-time
          example: '2024-01-02T12:00:00Z'
    UserCreate:
      type: object
      required:
        - username
        - email
        - hashed_password
      properties:
        username:
          type: string
          example: johndoe
        email:
          type: string
          format: email
          example: johndoe@example.com
        hashed_password:
          type: string
          example: 'hashed_password_here'
    UserUpdate:
      type: object
      properties:
        username:
          type: string
          example: johndoe_new
        hashed_password:
          type: string
          example: 'new_hashed_password_here'
        is_active:
          type: boolean
          example: false
